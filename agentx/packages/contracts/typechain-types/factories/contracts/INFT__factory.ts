/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { INFT, INFTInterface } from "../../contracts/INFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "AgentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "CreationFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "updateCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRecipient",
        type: "address",
      },
    ],
    name: "updateFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016008556611c37937e080006009553480156200002157600080fd5b5060405162001bf038038062001bf083398101604081905262000044916200015d565b336040518060400160405280600b81526020016a1059d95b9d16081253919560aa1b81525060405180604001604052806005815260200164105253919560da1b815250816000908162000098919062000236565b506001620000a7828262000236565b5050506001600160a01b038116620000d957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000e4816200010b565b50600a80546001600160a01b0319166001600160a01b039290921691909117905562000302565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200017057600080fd5b81516001600160a01b03811681146200018857600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001ba57607f821691505b602082108103620001db57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000231576000816000526020600020601f850160051c810160208610156200020c5750805b601f850160051c820191505b818110156200022d5782815560010162000218565b5050505b505050565b81516001600160401b038111156200025257620002526200018f565b6200026a81620002638454620001a5565b84620001e1565b602080601f831160018114620002a25760008415620002895750858301515b600019600386901b1c1916600185901b1785556200022d565b600085815260208120601f198616915b82811015620002d357888601518255948401946001909101908401620002b2565b5085821015620002f25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118de80620003126000396000f3fe6080604052600436106101355760003560e01c80638da5cb5b116100ab578063d85d3d271161006f578063d85d3d2714610361578063db2e21bc14610374578063dce0b4e414610389578063e985e9c51461039f578063f160d369146103bf578063f2fde38b146103df57600080fd5b80638da5cb5b146102ce57806395d89b41146102ec578063a22cb46514610301578063b88d4fde14610321578063c87b56dd1461034157600080fd5b806342842e0e116100fd57806342842e0e1461020b578063469048401461022b5780636352211e1461024b5780636fa237951461026b57806370a082311461028b578063715018a6146102b957600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c957806323b872dd146101eb575b600080fd5b34801561014657600080fd5b5061015a61015536600461137e565b6103ff565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610410565b60405161016691906113eb565b34801561019d57600080fd5b506101b16101ac3660046113fe565b6104a2565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e4366004611433565b6104cb565b005b3480156101f757600080fd5b506101e961020636600461145d565b6104da565b34801561021757600080fd5b506101e961022636600461145d565b61056a565b34801561023757600080fd5b50600a546101b1906001600160a01b031681565b34801561025757600080fd5b506101b16102663660046113fe565b61058a565b34801561027757600080fd5b506101e96102863660046113fe565b610595565b34801561029757600080fd5b506102ab6102a6366004611499565b6105d9565b604051908152602001610166565b3480156102c557600080fd5b506101e9610621565b3480156102da57600080fd5b506007546001600160a01b03166101b1565b3480156102f857600080fd5b50610184610635565b34801561030d57600080fd5b506101e961031c3660046114b4565b610644565b34801561032d57600080fd5b506101e961033c366004611506565b61064f565b34801561034d57600080fd5b5061018461035c3660046113fe565b610667565b6102ab61036f3660046115e2565b610672565b34801561038057600080fd5b506101e9610811565b34801561039557600080fd5b506102ab60095481565b3480156103ab57600080fd5b5061015a6103ba366004611654565b6108c2565b3480156103cb57600080fd5b506101e96103da366004611499565b6108f0565b3480156103eb57600080fd5b506101e96103fa366004611499565b61098b565b600061040a826109c6565b92915050565b60606000805461041f90611687565b80601f016020809104026020016040519081016040528092919081815260200182805461044b90611687565b80156104985780601f1061046d57610100808354040283529160200191610498565b820191906000526020600020905b81548152906001019060200180831161047b57829003601f168201915b5050505050905090565b60006104ad826109eb565b506000828152600460205260409020546001600160a01b031661040a565b6104d6828233610a24565b5050565b6001600160a01b03821661050957604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610516838333610a31565b9050836001600160a01b0316816001600160a01b031614610564576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610500565b50505050565b6105858383836040518060200160405280600081525061064f565b505050565b600061040a826109eb565b61059d610b2a565b60098190556040518181527f88a973fd5506071e0cf878b30898776c47d5250a7ee1e6ee0b36df3b03c7c16a906020015b60405180910390a150565b60006001600160a01b038216610605576040516322718ad960e21b815260006004820152602401610500565b506001600160a01b031660009081526003602052604090205490565b610629610b2a565b6106336000610b57565b565b60606001805461041f90611687565b6104d6338383610ba9565b61065a8484846104da565b6105643385858585610c48565b606061040a82610d73565b60006009543410156106c65760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f4352454154494f4e5f464545000000000000006044820152606401610500565b600880549060006106d6836116c1565b9190505590506106e63382610e84565b6107268184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e9e92505050565b34156107c757600a546040516000916001600160a01b03169034908381818185875af1925050503d8060008114610779576040519150601f19603f3d011682016040523d82523d6000602084013e61077e565b606091505b50509050806107c55760405162461bcd60e51b815260206004820152601360248201527211915157d514905394d1915497d19052531151606a1b6044820152606401610500565b505b336001600160a01b0316817fa5b2eed1bb028a308c4a4b0ebe9c32deeccb838ec53fcf79051a16ee8fc6ac6585856040516108039291906116e8565b60405180910390a392915050565b610819610b2a565b600061082d6007546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610877576040519150601f19603f3d011682016040523d82523d6000602084013e61087c565b606091505b50509050806108bf5760405162461bcd60e51b815260206004820152600f60248201526e15d2551211149055d7d19052531151608a1b6044820152606401610500565b50565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6108f8610b2a565b6001600160a01b03811661093d5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610500565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527f7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc2906020016105ce565b610993610b2a565b6001600160a01b0381166109bd57604051631e4fbdf760e01b815260006004820152602401610500565b6108bf81610b57565b60006001600160e01b03198216632483248360e11b148061040a575061040a82610eee565b6000818152600260205260408120546001600160a01b03168061040a57604051637e27328960e01b815260048101849052602401610500565b6105858383836001610f3e565b6000828152600260205260408120546001600160a01b0390811690831615610a5e57610a5e818486611044565b6001600160a01b03811615610a9c57610a7b600085600080610f3e565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610acb576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b031633146106335760405163118cdaa760e01b8152336004820152602401610500565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610bdb57604051630b61174360e31b81526001600160a01b0383166004820152602401610500565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610d6c57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610c8a908890889087908790600401611717565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc291810190611754565b60015b610d2e573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d2657604051633250574960e11b81526001600160a01b0385166004820152602401610500565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610d6a57604051633250574960e11b81526001600160a01b0385166004820152602401610500565b505b5050505050565b6060610d7e826109eb565b5060008281526006602052604081208054610d9890611687565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc490611687565b8015610e115780601f10610de657610100808354040283529160200191610e11565b820191906000526020600020905b815481529060010190602001808311610df457829003601f168201915b505050505090506000610e2f60408051602081019091526000815290565b90508051600003610e41575092915050565b815115610e73578082604051602001610e5b929190611771565b60405160208183030381529060405292505050919050565b610e7c846110a8565b949350505050565b6104d682826040518060200160405280600081525061111d565b6000828152600660205260409020610eb682826117e8565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b1480610f1f57506001600160e01b03198216635b5e139f60e01b145b8061040a57506301ffc9a760e01b6001600160e01b031983161461040a565b8080610f5257506001600160a01b03821615155b15611014576000610f62846109eb565b90506001600160a01b03831615801590610f8e5750826001600160a01b0316816001600160a01b031614155b8015610fa15750610f9f81846108c2565b155b15610fca5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610500565b81156110125783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61104f838383611135565b610585576001600160a01b03831661107d57604051637e27328960e01b815260048101829052602401610500565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610500565b60606110b3826109eb565b5060006110cb60408051602081019091526000815290565b905060008151116110eb5760405180602001604052806000815250611116565b806110f584611198565b604051602001611106929190611771565b6040516020818303038152906040525b9392505050565b611127838361122b565b610585336000858585610c48565b60006001600160a01b03831615801590610e7c5750826001600160a01b0316846001600160a01b0316148061116f575061116f84846108c2565b80610e7c5750506000908152600460205260409020546001600160a01b03908116911614919050565b606060006111a583611290565b600101905060008167ffffffffffffffff8111156111c5576111c56114f0565b6040519080825280601f01601f1916602001820160405280156111ef576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846111f957509392505050565b6001600160a01b03821661125557604051633250574960e11b815260006004820152602401610500565b600061126383836000610a31565b90506001600160a01b03811615610585576040516339e3563760e11b815260006004820152602401610500565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112cf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112fb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061131957662386f26fc10000830492506010015b6305f5e1008310611331576305f5e100830492506008015b612710831061134557612710830492506004015b60648310611357576064830492506002015b600a831061040a5760010192915050565b6001600160e01b0319811681146108bf57600080fd5b60006020828403121561139057600080fd5b813561111681611368565b60005b838110156113b657818101518382015260200161139e565b50506000910152565b600081518084526113d781602086016020860161139b565b601f01601f19169290920160200192915050565b60208152600061111660208301846113bf565b60006020828403121561141057600080fd5b5035919050565b80356001600160a01b038116811461142e57600080fd5b919050565b6000806040838503121561144657600080fd5b61144f83611417565b946020939093013593505050565b60008060006060848603121561147257600080fd5b61147b84611417565b925061148960208501611417565b9150604084013590509250925092565b6000602082840312156114ab57600080fd5b61111682611417565b600080604083850312156114c757600080fd5b6114d083611417565b9150602083013580151581146114e557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561151c57600080fd5b61152585611417565b935061153360208601611417565b925060408501359150606085013567ffffffffffffffff8082111561155757600080fd5b818701915087601f83011261156b57600080fd5b81358181111561157d5761157d6114f0565b604051601f8201601f19908116603f011681019083821181831017156115a5576115a56114f0565b816040528281528a60208487010111156115be57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080602083850312156115f557600080fd5b823567ffffffffffffffff8082111561160d57600080fd5b818501915085601f83011261162157600080fd5b81358181111561163057600080fd5b86602082850101111561164257600080fd5b60209290920196919550909350505050565b6000806040838503121561166757600080fd5b61167083611417565b915061167e60208401611417565b90509250929050565b600181811c9082168061169b57607f821691505b6020821081036116bb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016116e157634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061174a908301846113bf565b9695505050505050565b60006020828403121561176657600080fd5b815161111681611368565b6000835161178381846020880161139b565b83519083019061179781836020880161139b565b01949350505050565b601f821115610585576000816000526020600020601f850160051c810160208610156117c95750805b601f850160051c820191505b81811015610d6a578281556001016117d5565b815167ffffffffffffffff811115611802576118026114f0565b611816816118108454611687565b846117a0565b602080601f83116001811461184b57600084156118335750858301515b600019600386901b1c1916600185901b178555610d6a565b600085815260208120601f198616915b8281101561187a5788860151825594840194600190910190840161185b565b50858210156118985787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220526af12ab9ec39f0584d9fd061c80939bd1cc7a15322c9d83d25bcbc6cd7d04f64736f6c63430008180033";

type INFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: INFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class INFT__factory extends ContractFactory {
  constructor(...args: INFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_feeRecipient, overrides || {});
  }
  override deploy(
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeRecipient, overrides || {}) as Promise<
      INFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): INFT__factory {
    return super.connect(runner) as INFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): INFTInterface {
    return new Interface(_abi) as INFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): INFT {
    return new Contract(address, _abi, runner) as unknown as INFT;
  }
}
