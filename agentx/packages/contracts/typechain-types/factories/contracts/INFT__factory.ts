/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { INFT, INFTInterface } from "../../contracts/INFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016008553480156200001657600080fd5b50336040518060400160405280600b81526020016a1059d95b9d16081253919560aa1b81525060405180604001604052806005815260200164105253919560da1b81525081600090816200006b9190620001b7565b5060016200007a8282620001b7565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000be565b5062000283565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013b57607f821691505b6020821081036200015c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b2576000816000526020600020601f850160051c810160208610156200018d5750805b601f850160051c820191505b81811015620001ae5782815560010162000199565b5050505b505050565b81516001600160401b03811115620001d357620001d362000110565b620001eb81620001e4845462000126565b8462000162565b602080601f8311600181146200022357600084156200020a5750858301515b600019600386901b1c1916600185901b178555620001ae565b600085815260208120601f198616915b82811015620002545788860151825594840194600190910190840162000233565b5085821015620002735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61145f80620002936000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde1461021b578063c87b56dd1461022e578063d85d3d2714610241578063e985e9c514610254578063f2fde38b1461026757600080fd5b8063715018a6146101e75780638da5cb5b146101ef57806395d89b4114610200578063a22cb4651461020857600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780636352211e146101b357806370a08231146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610f2e565b61027a565b60405190151581526020015b60405180910390f35b61014061028b565b60405161012f9190610f9b565b61016061015b366004610fae565b61031d565b6040516001600160a01b03909116815260200161012f565b61018b610186366004610fe3565b610346565b005b61018b61019b36600461100d565b610355565b61018b6101ae36600461100d565b6103e5565b6101606101c1366004610fae565b610405565b6101d96101d4366004611049565b610410565b60405190815260200161012f565b61018b610458565b6007546001600160a01b0316610160565b61014061046c565b61018b610216366004611064565b61047b565b61018b6102293660046110b6565b610486565b61014061023c366004610fae565b61049e565b6101d961024f366004611192565b6104a9565b610123610262366004611204565b61050a565b61018b610275366004611049565b610538565b600061028582610576565b92915050565b60606000805461029a90611237565b80601f01602080910402602001604051908101604052809291908181526020018280546102c690611237565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b60006103288261059b565b506000828152600460205260409020546001600160a01b0316610285565b6103518282336105d4565b5050565b6001600160a01b03821661038457604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103918383336105e1565b9050836001600160a01b0316816001600160a01b0316146103df576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161037b565b50505050565b61040083838360405180602001604052806000815250610486565b505050565b60006102858261059b565b60006001600160a01b03821661043c576040516322718ad960e21b81526000600482015260240161037b565b506001600160a01b031660009081526003602052604090205490565b6104606106da565b61046a6000610707565b565b60606001805461029a90611237565b610351338383610759565b610491848484610355565b6103df33858585856107f8565b606061028582610923565b60088054600091826104ba83611271565b9190505590506104ca3382610a34565b6102858184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a4e92505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6105406106da565b6001600160a01b03811661056a57604051631e4fbdf760e01b81526000600482015260240161037b565b61057381610707565b50565b60006001600160e01b03198216632483248360e11b1480610285575061028582610a9e565b6000818152600260205260408120546001600160a01b03168061028557604051637e27328960e01b81526004810184905260240161037b565b6104008383836001610aee565b6000828152600260205260408120546001600160a01b039081169083161561060e5761060e818486610bf4565b6001600160a01b0381161561064c5761062b600085600080610aee565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561067b576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b0316331461046a5760405163118cdaa760e01b815233600482015260240161037b565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661078b57604051630b61174360e31b81526001600160a01b038316600482015260240161037b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561091c57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061083a908890889087908790600401611298565b6020604051808303816000875af1925050508015610875575060408051601f3d908101601f19168201909252610872918101906112d5565b60015b6108de573d8080156108a3576040519150601f19603f3d011682016040523d82523d6000602084013e6108a8565b606091505b5080516000036108d657604051633250574960e11b81526001600160a01b038516600482015260240161037b565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461091a57604051633250574960e11b81526001600160a01b038516600482015260240161037b565b505b5050505050565b606061092e8261059b565b506000828152600660205260408120805461094890611237565b80601f016020809104026020016040519081016040528092919081815260200182805461097490611237565b80156109c15780601f10610996576101008083540402835291602001916109c1565b820191906000526020600020905b8154815290600101906020018083116109a457829003601f168201915b5050505050905060006109df60408051602081019091526000815290565b905080516000036109f1575092915050565b815115610a23578082604051602001610a0b9291906112f2565b60405160208183030381529060405292505050919050565b610a2c84610c58565b949350505050565b610351828260405180602001604052806000815250610ccd565b6000828152600660205260409020610a668282611369565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b1480610acf57506001600160e01b03198216635b5e139f60e01b145b8061028557506301ffc9a760e01b6001600160e01b0319831614610285565b8080610b0257506001600160a01b03821615155b15610bc4576000610b128461059b565b90506001600160a01b03831615801590610b3e5750826001600160a01b0316816001600160a01b031614155b8015610b515750610b4f818461050a565b155b15610b7a5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161037b565b8115610bc25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610bff838383610ce5565b610400576001600160a01b038316610c2d57604051637e27328960e01b81526004810182905260240161037b565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161037b565b6060610c638261059b565b506000610c7b60408051602081019091526000815290565b90506000815111610c9b5760405180602001604052806000815250610cc6565b80610ca584610d48565b604051602001610cb69291906112f2565b6040516020818303038152906040525b9392505050565b610cd78383610ddb565b6104003360008585856107f8565b60006001600160a01b03831615801590610a2c5750826001600160a01b0316846001600160a01b03161480610d1f5750610d1f848461050a565b80610a2c5750506000908152600460205260409020546001600160a01b03908116911614919050565b60606000610d5583610e40565b600101905060008167ffffffffffffffff811115610d7557610d756110a0565b6040519080825280601f01601f191660200182016040528015610d9f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610da957509392505050565b6001600160a01b038216610e0557604051633250574960e11b81526000600482015260240161037b565b6000610e13838360006105e1565b90506001600160a01b03811615610400576040516339e3563760e11b81526000600482015260240161037b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e7f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610eab576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610ec957662386f26fc10000830492506010015b6305f5e1008310610ee1576305f5e100830492506008015b6127108310610ef557612710830492506004015b60648310610f07576064830492506002015b600a83106102855760010192915050565b6001600160e01b03198116811461057357600080fd5b600060208284031215610f4057600080fd5b8135610cc681610f18565b60005b83811015610f66578181015183820152602001610f4e565b50506000910152565b60008151808452610f87816020860160208601610f4b565b601f01601f19169290920160200192915050565b602081526000610cc66020830184610f6f565b600060208284031215610fc057600080fd5b5035919050565b80356001600160a01b0381168114610fde57600080fd5b919050565b60008060408385031215610ff657600080fd5b610fff83610fc7565b946020939093013593505050565b60008060006060848603121561102257600080fd5b61102b84610fc7565b925061103960208501610fc7565b9150604084013590509250925092565b60006020828403121561105b57600080fd5b610cc682610fc7565b6000806040838503121561107757600080fd5b61108083610fc7565b91506020830135801515811461109557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156110cc57600080fd5b6110d585610fc7565b93506110e360208601610fc7565b925060408501359150606085013567ffffffffffffffff8082111561110757600080fd5b818701915087601f83011261111b57600080fd5b81358181111561112d5761112d6110a0565b604051601f8201601f19908116603f01168101908382118183101715611155576111556110a0565b816040528281528a602084870101111561116e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080602083850312156111a557600080fd5b823567ffffffffffffffff808211156111bd57600080fd5b818501915085601f8301126111d157600080fd5b8135818111156111e057600080fd5b8660208285010111156111f257600080fd5b60209290920196919550909350505050565b6000806040838503121561121757600080fd5b61122083610fc7565b915061122e60208401610fc7565b90509250929050565b600181811c9082168061124b57607f821691505b60208210810361126b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161129157634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112cb90830184610f6f565b9695505050505050565b6000602082840312156112e757600080fd5b8151610cc681610f18565b60008351611304818460208801610f4b565b835190830190611318818360208801610f4b565b01949350505050565b601f821115610400576000816000526020600020601f850160051c8101602086101561134a5750805b601f850160051c820191505b8181101561091a57828155600101611356565b815167ffffffffffffffff811115611383576113836110a0565b611397816113918454611237565b84611321565b602080601f8311600181146113cc57600084156113b45750858301515b600019600386901b1c1916600185901b17855561091a565b600085815260208120601f198616915b828110156113fb578886015182559484019460019091019084016113dc565b50858210156114195787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220d295a1536d1067ac0913d7c60cba8b42097cbd86a0722de7b08c6ff391bae62c64736f6c63430008180033";

type INFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: INFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class INFT__factory extends ContractFactory {
  constructor(...args: INFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      INFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): INFT__factory {
    return super.connect(runner) as INFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): INFTInterface {
    return new Interface(_abi) as INFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): INFT {
    return new Contract(address, _abi, runner) as unknown as INFT;
  }
}
