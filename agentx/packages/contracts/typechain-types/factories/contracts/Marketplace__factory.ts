/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "Cancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeePercent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newListingFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Listed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "platformFee",
        type: "uint256",
      },
    ],
    name: "Purchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "calculateFees",
    outputs: [
      {
        internalType: "uint256",
        name: "platformFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextListingId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRecipient",
        type: "address",
      },
    ],
    name: "updateFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_platformFeePercent",
        type: "uint256",
      },
    ],
    name: "updatePlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600180556103e860035534801561001a57600080fd5b50604051610f2b380380610f2b833981016040819052610039916100de565b338061005f57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100688161008e565b50600480546001600160a01b0319166001600160a01b039290921691909117905561010e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f057600080fd5b81516001600160a01b038116811461010757600080fd5b9392505050565b610e0e8061011d6000396000f3fe6080604052600436106100dd5760003560e01c8063aaccf1ec1161007f578063dda342bb11610059578063dda342bb1461022b578063de74e57b1461024b578063f160d369146102de578063f2fde38b146102fe57600080fd5b8063aaccf1ec146101ed578063d96a094a14610203578063db2e21bc1461021657600080fd5b8063715018a6116100bb578063715018a6146101765780638c639a851461018b5780638da5cb5b146101af578063aa0b5988146101cd57600080fd5b806340e58ee5146100e2578063469048401461010457806352238fdd14610141575b600080fd5b3480156100ee57600080fd5b506101026100fd366004610c91565b61031e565b005b34801561011057600080fd5b50600454610124906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c366004610c91565b610409565b60408051928352602083019190915201610138565b34801561018257600080fd5b5061010261043a565b34801561019757600080fd5b506101a160035481565b604051908152602001610138565b3480156101bb57600080fd5b506000546001600160a01b0316610124565b3480156101d957600080fd5b506101026101e8366004610c91565b61044e565b3480156101f957600080fd5b506101a160015481565b610102610211366004610c91565b6104d9565b34801561022257600080fd5b5061010261079e565b34801561023757600080fd5b506101a1610246366004610cbf565b61083e565b34801561025757600080fd5b506102a5610266366004610c91565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039283169493919092169160ff1685565b604080516001600160a01b039687168152602081019590955292909416918301919091526060820152901515608082015260a001610138565b3480156102ea57600080fd5b506101026102f9366004610cf4565b610b3e565b34801561030a57600080fd5b50610102610319366004610cf4565b610bd9565b6000818152600260205260409020600481015460ff166103725760405162461bcd60e51b815260206004820152600a6024820152694e4f545f41435449564560b01b60448201526064015b60405180910390fd5b60028101546001600160a01b031633148061039757506000546001600160a01b031633145b6103ce5760405162461bcd60e51b815260206004820152600860248201526709c9ea8be82aaa8960c31b6044820152606401610369565b60048101805460ff1916905560405182907fc41d93b8bfbf9fd7cf5bfe271fd649ab6a6fec0ea101c23b82a2a28eca2533a990600090a25050565b6000806127106003548461041d9190610d2e565b6104279190610d4b565b91506104338284610d6d565b9050915091565b610442610c14565b61044c6000610c41565b565b610456610c14565b6109c48111156104975760405162461bcd60e51b815260206004820152600c60248201526b08c8a8abea89e9ebe90928e960a31b6044820152606401610369565b600381905560408051828152600060208201527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df6130291015b60405180910390a150565b6000818152600260205260409020600481015460ff166105285760405162461bcd60e51b815260206004820152600a6024820152694e4f545f41435449564560b01b6044820152606401610369565b806003015434146105675760405162461bcd60e51b81526020600482015260096024820152684241445f505249434560b81b6044820152606401610369565b60048101805460ff1916905560038054908201546000916127109161058c9190610d2e565b6105969190610d4b565b905060008183600301546105aa9190610d6d565b835460028501546001860154604051632142170760e11b81526001600160a01b039283166004820152336024820152604481019190915292935016906342842e0e90606401600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b5050505060008111156106c35760028301546040516000916001600160a01b03169083908381818185875af1925050503d8060008114610679576040519150601f19603f3d011682016040523d82523d6000602084013e61067e565b606091505b50509050806106c15760405162461bcd60e51b815260206004820152600f60248201526e14d15313115497d4105657d1905253608a1b6044820152606401610369565b505b811561075d576004546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610716576040519150601f19603f3d011682016040523d82523d6000602084013e61071b565b606091505b505090508061075b5760405162461bcd60e51b815260206004820152600c60248201526b11915157d4105657d190525360a21b6044820152606401610369565b505b604080513381526020810184905285917ffd51b2c9f55c42d2b72ac683526519563be02fc0107f034ff430c05185ff1b66910160405180910390a250505050565b6107a6610c14565b600080546040516001600160a01b039091169047908381818185875af1925050503d80600081146107f3576040519150601f19603f3d011682016040523d82523d6000602084013e6107f8565b606091505b505090508061083b5760405162461bcd60e51b815260206004820152600f60248201526e15d2551211149055d7d19052531151608a1b6044820152606401610369565b50565b600080821161087c5760405162461bcd60e51b815260206004820152600a60248201526950524943455f5a45524f60b01b6044820152606401610369565b6040516331a9108f60e11b81526004810184905233906001600160a01b03861690636352211e90602401602060405180830381865afa1580156108c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e79190610d80565b6001600160a01b0316146109295760405162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b6044820152606401610369565b60405163020604bf60e21b81526004810184905230906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109949190610d80565b6001600160a01b03161480610a12575060405163e985e9c560e01b81523360048201523060248201526001600160a01b0385169063e985e9c590604401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190610d9d565b610a4d5760405162461bcd60e51b815260206004820152600c60248201526b1393d517d054141493d5915160a21b6044820152606401610369565b60018054906000610a5d83610dbf565b909155506040805160a0810182526001600160a01b03878116808352602080840189815233858701818152606087018b815260016080890181815260008c81526002808952908c90209a518b546001600160a01b0319908116918c16919091178c559651928b01929092559251908901805490951697169690961790925593516003860155516004909401805460ff19169415159490941790935583519182529181018690529293508592909184917f9791797c382de5e73cc7c32c32ffd8304e9b9cc1f6afd967990c1edd0729dba9910160405180910390a49392505050565b610b46610c14565b6001600160a01b038116610b8b5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610369565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527f7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc2906020016104ce565b610be1610c14565b6001600160a01b038116610c0b57604051631e4fbdf760e01b815260006004820152602401610369565b61083b81610c41565b6000546001600160a01b0316331461044c5760405163118cdaa760e01b8152336004820152602401610369565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610ca357600080fd5b5035919050565b6001600160a01b038116811461083b57600080fd5b600080600060608486031215610cd457600080fd5b8335610cdf81610caa565b95602085013595506040909401359392505050565b600060208284031215610d0657600080fd5b8135610d1181610caa565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610d4557610d45610d18565b92915050565b600082610d6857634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610d4557610d45610d18565b600060208284031215610d9257600080fd5b8151610d1181610caa565b600060208284031215610daf57600080fd5b81518015158114610d1157600080fd5b600060018201610dd157610dd1610d18565b506001019056fea264697066735822122005039d9df21b9a134cf3f9fe3ea7febb9472dde0443dd1d7737730c1c49a8ad164736f6c63430008180033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_feeRecipient, overrides || {});
  }
  override deploy(
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeRecipient, overrides || {}) as Promise<
      Marketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Marketplace__factory {
    return super.connect(runner) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new Interface(_abi) as MarketplaceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Marketplace {
    return new Contract(address, _abi, runner) as unknown as Marketplace;
  }
}
