/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleINFT,
  SimpleINFTInterface,
} from "../../contracts/SimpleINFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "AgentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "updateCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRecipient",
        type: "address",
      },
    ],
    name: "updateFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016008556611c37937e080006009553480156200002157600080fd5b5060405162001b5438038062001b5483398101604081905262000044916200015d565b336040518060400160405280600b81526020016a1059d95b9d16081253919560aa1b81525060405180604001604052806005815260200164105253919560da1b815250816000908162000098919062000236565b506001620000a7828262000236565b5050506001600160a01b038116620000d957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000e4816200010b565b50600a80546001600160a01b0319166001600160a01b039290921691909117905562000302565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200017057600080fd5b81516001600160a01b03811681146200018857600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001ba57607f821691505b602082108103620001db57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000231576000816000526020600020601f850160051c810160208610156200020c5750805b601f850160051c820191505b818110156200022d5782815560010162000218565b5050505b505050565b81516001600160401b038111156200025257620002526200018f565b6200026a81620002638454620001a5565b84620001e1565b602080601f831160018114620002a25760008415620002895750858301515b600019600386901b1c1916600185901b1785556200022d565b600085815260208120601f198616915b82811015620002d357888601518255948401946001909101908401620002b2565b5085821015620002f25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61184280620003126000396000f3fe6080604052600436106101355760003560e01c8063715018a6116100ab578063c87b56dd1161006f578063c87b56dd14610356578063d85d3d2714610376578063dce0b4e414610389578063e985e9c51461039f578063f160d369146103bf578063f2fde38b146103df57600080fd5b8063715018a6146102ce5780638da5cb5b146102e357806395d89b4114610301578063a22cb46514610316578063b88d4fde1461033657600080fd5b80633ccfd60b116100fd5780633ccfd60b1461020b57806342842e0e1461022057806346904840146102405780636352211e146102605780636fa237951461028057806370a08231146102a057600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c957806323b872dd146101eb575b600080fd5b34801561014657600080fd5b5061015a6101553660046112e2565b6103ff565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610410565b604051610166919061134f565b34801561019d57600080fd5b506101b16101ac366004611362565b6104a2565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e4366004611397565b6104cb565b005b3480156101f757600080fd5b506101e96102063660046113c1565b6104da565b34801561021757600080fd5b506101e961056a565b34801561022c57600080fd5b506101e961023b3660046113c1565b61061b565b34801561024c57600080fd5b50600a546101b1906001600160a01b031681565b34801561026c57600080fd5b506101b161027b366004611362565b61063b565b34801561028c57600080fd5b506101e961029b366004611362565b610646565b3480156102ac57600080fd5b506102c06102bb3660046113fd565b610653565b604051908152602001610166565b3480156102da57600080fd5b506101e961069b565b3480156102ef57600080fd5b506007546001600160a01b03166101b1565b34801561030d57600080fd5b506101846106af565b34801561032257600080fd5b506101e9610331366004611418565b6106be565b34801561034257600080fd5b506101e961035136600461146a565b6106c9565b34801561036257600080fd5b50610184610371366004611362565b6106e1565b6102c0610384366004611546565b6106ec565b34801561039557600080fd5b506102c060095481565b3480156103ab57600080fd5b5061015a6103ba3660046115b8565b610897565b3480156103cb57600080fd5b506101e96103da3660046113fd565b6108c5565b3480156103eb57600080fd5b506101e96103fa3660046113fd565b6108ef565b600061040a8261092a565b92915050565b60606000805461041f906115eb565b80601f016020809104026020016040519081016040528092919081815260200182805461044b906115eb565b80156104985780601f1061046d57610100808354040283529160200191610498565b820191906000526020600020905b81548152906001019060200180831161047b57829003601f168201915b5050505050905090565b60006104ad8261094f565b506000828152600460205260409020546001600160a01b031661040a565b6104d6828233610988565b5050565b6001600160a01b03821661050957604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610516838333610995565b9050836001600160a01b0316816001600160a01b031614610564576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610500565b50505050565b610572610a8e565b60006105866007546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d80600081146105d0576040519150601f19603f3d011682016040523d82523d6000602084013e6105d5565b606091505b50509050806106185760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606401610500565b50565b610636838383604051806020016040528060008152506106c9565b505050565b600061040a8261094f565b61064e610a8e565b600955565b60006001600160a01b03821661067f576040516322718ad960e21b815260006004820152602401610500565b506001600160a01b031660009081526003602052604090205490565b6106a3610a8e565b6106ad6000610abb565b565b60606001805461041f906115eb565b6104d6338383610b0d565b6106d48484846104da565b6105643385858585610bac565b606061040a82610cd7565b60006009543410156107335760405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606401610500565b6008805490600061074383611625565b9190505590506107533382610de8565b6107938184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e0292505050565b6000341180156107ad5750600a546001600160a01b031615155b1561084d57600a546040516000916001600160a01b03169034908381818185875af1925050503d80600081146107ff576040519150601f19603f3d011682016040523d82523d6000602084013e610804565b606091505b505090508061084b5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610500565b505b336001600160a01b0316817fa5b2eed1bb028a308c4a4b0ebe9c32deeccb838ec53fcf79051a16ee8fc6ac65858560405161088992919061164c565b60405180910390a392915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6108cd610a8e565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6108f7610a8e565b6001600160a01b03811661092157604051631e4fbdf760e01b815260006004820152602401610500565b61061881610abb565b60006001600160e01b03198216632483248360e11b148061040a575061040a82610e52565b6000818152600260205260408120546001600160a01b03168061040a57604051637e27328960e01b815260048101849052602401610500565b6106368383836001610ea2565b6000828152600260205260408120546001600160a01b03908116908316156109c2576109c2818486610fa8565b6001600160a01b03811615610a00576109df600085600080610ea2565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610a2f576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b031633146106ad5760405163118cdaa760e01b8152336004820152602401610500565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b3f57604051630b61174360e31b81526001600160a01b0383166004820152602401610500565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610cd057604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610bee90889088908790879060040161167b565b6020604051808303816000875af1925050508015610c29575060408051601f3d908101601f19168201909252610c26918101906116b8565b60015b610c92573d808015610c57576040519150601f19603f3d011682016040523d82523d6000602084013e610c5c565b606091505b508051600003610c8a57604051633250574960e11b81526001600160a01b0385166004820152602401610500565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610cce57604051633250574960e11b81526001600160a01b0385166004820152602401610500565b505b5050505050565b6060610ce28261094f565b5060008281526006602052604081208054610cfc906115eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610d28906115eb565b8015610d755780601f10610d4a57610100808354040283529160200191610d75565b820191906000526020600020905b815481529060010190602001808311610d5857829003601f168201915b505050505090506000610d9360408051602081019091526000815290565b90508051600003610da5575092915050565b815115610dd7578082604051602001610dbf9291906116d5565b60405160208183030381529060405292505050919050565b610de08461100c565b949350505050565b6104d6828260405180602001604052806000815250611081565b6000828152600660205260409020610e1a828261174c565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b1480610e8357506001600160e01b03198216635b5e139f60e01b145b8061040a57506301ffc9a760e01b6001600160e01b031983161461040a565b8080610eb657506001600160a01b03821615155b15610f78576000610ec68461094f565b90506001600160a01b03831615801590610ef25750826001600160a01b0316816001600160a01b031614155b8015610f055750610f038184610897565b155b15610f2e5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610500565b8115610f765783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610fb3838383611099565b610636576001600160a01b038316610fe157604051637e27328960e01b815260048101829052602401610500565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610500565b60606110178261094f565b50600061102f60408051602081019091526000815290565b9050600081511161104f576040518060200160405280600081525061107a565b80611059846110fc565b60405160200161106a9291906116d5565b6040516020818303038152906040525b9392505050565b61108b838361118f565b610636336000858585610bac565b60006001600160a01b03831615801590610de05750826001600160a01b0316846001600160a01b031614806110d357506110d38484610897565b80610de05750506000908152600460205260409020546001600160a01b03908116911614919050565b60606000611109836111f4565b600101905060008167ffffffffffffffff81111561112957611129611454565b6040519080825280601f01601f191660200182016040528015611153576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461115d57509392505050565b6001600160a01b0382166111b957604051633250574960e11b815260006004820152602401610500565b60006111c783836000610995565b90506001600160a01b03811615610636576040516339e3563760e11b815260006004820152602401610500565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112335772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061125f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061127d57662386f26fc10000830492506010015b6305f5e1008310611295576305f5e100830492506008015b61271083106112a957612710830492506004015b606483106112bb576064830492506002015b600a831061040a5760010192915050565b6001600160e01b03198116811461061857600080fd5b6000602082840312156112f457600080fd5b813561107a816112cc565b60005b8381101561131a578181015183820152602001611302565b50506000910152565b6000815180845261133b8160208601602086016112ff565b601f01601f19169290920160200192915050565b60208152600061107a6020830184611323565b60006020828403121561137457600080fd5b5035919050565b80356001600160a01b038116811461139257600080fd5b919050565b600080604083850312156113aa57600080fd5b6113b38361137b565b946020939093013593505050565b6000806000606084860312156113d657600080fd5b6113df8461137b565b92506113ed6020850161137b565b9150604084013590509250925092565b60006020828403121561140f57600080fd5b61107a8261137b565b6000806040838503121561142b57600080fd5b6114348361137b565b91506020830135801515811461144957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561148057600080fd5b6114898561137b565b93506114976020860161137b565b925060408501359150606085013567ffffffffffffffff808211156114bb57600080fd5b818701915087601f8301126114cf57600080fd5b8135818111156114e1576114e1611454565b604051601f8201601f19908116603f0116810190838211818310171561150957611509611454565b816040528281528a602084870101111561152257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806020838503121561155957600080fd5b823567ffffffffffffffff8082111561157157600080fd5b818501915085601f83011261158557600080fd5b81358181111561159457600080fd5b8660208285010111156115a657600080fd5b60209290920196919550909350505050565b600080604083850312156115cb57600080fd5b6115d48361137b565b91506115e26020840161137b565b90509250929050565b600181811c908216806115ff57607f821691505b60208210810361161f57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161164557634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116ae90830184611323565b9695505050505050565b6000602082840312156116ca57600080fd5b815161107a816112cc565b600083516116e78184602088016112ff565b8351908301906116fb8183602088016112ff565b01949350505050565b601f821115610636576000816000526020600020601f850160051c8101602086101561172d5750805b601f850160051c820191505b81811015610cce57828155600101611739565b815167ffffffffffffffff81111561176657611766611454565b61177a8161177484546115eb565b84611704565b602080601f8311600181146117af57600084156117975750858301515b600019600386901b1c1916600185901b178555610cce565b600085815260208120601f198616915b828110156117de578886015182559484019460019091019084016117bf565b50858210156117fc5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122020dc891ecc99f639753fbfb888ab0ddddb67289f237685c0e95155b2d0f2b07d64736f6c63430008180033";

type SimpleINFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleINFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleINFT__factory extends ContractFactory {
  constructor(...args: SimpleINFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_feeRecipient, overrides || {});
  }
  override deploy(
    _feeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeRecipient, overrides || {}) as Promise<
      SimpleINFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleINFT__factory {
    return super.connect(runner) as SimpleINFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleINFTInterface {
    return new Interface(_abi) as SimpleINFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleINFT {
    return new Contract(address, _abi, runner) as unknown as SimpleINFT;
  }
}
